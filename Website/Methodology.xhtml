<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <link rel="stylesheet" type="text/css" href="Home_Page.css" />
        <title>meme-syntax</title>
    </head>
    <body>
        <h1>Such Syntax, Much Meme: A Linguistic Analysis of Memes and Their Structural Syntax </h1>
        <div id="Menu">
            <!-- Home button -->
            <div id="DropdownHome">
                <button id="listHome">Home</button>
                <div id="pagesHome">
                    <a href="index.xhtml"> Take me home! </a>
                </div>
            </div>
            <!-- End button -->
            <!-- About button -->
            <div id="DropdownAbout">
                <button id="listAbout">About</button>
                <div id="pagesAbout">
                    <a href="Research_Question.xhtml"> Research Question </a>
                    <a href="Methodology.xhtml"> Methodology </a>
                </div>
            </div>
            <!-- End button -->
            <!-- Corpus button -->
            <div id="DropdownCorpus">
                <button id="listCorpus">Corpus</button>
                <div id="pagesCorpus">
                    <a href="Doge.xhtml"> Doge </a>
                    <a href="Drake.xhtml"> Drake </a>
                    <a href="Success_Kid.xhtml"> Success Kid </a>
                    <a href="Bad_Luck_Brian.xhtml"> Bad Luck Brian </a>
                    <a href="Arthur's_Fist.xhtml"> Arthur's Fist </a>
                    <a href="Lisa_Simpson.xhtml"> Lisa Simpson </a>
                    <a href="Savage_Patrick.xhtml"> Savage Patrick </a>
                    <a href="Scumbag_Steve.xhtml"> Scumbag Steve </a>
                    <a href="College_Freshman.xhtml"> College Freshman </a>
                    <a href="Distracted_Boyfriend.xhtml"> Distracted Boyfriend </a>
                    <a href="Math_Lady.xhtml"> Math Lady </a>
                    <a href="Roll_Safe.xhtml"> Roll Safe </a>
                </div>
            </div>
            <!-- End button -->
            <!-- Results button -->
            <div id="DropdownResults">
                <button id="listResults">Results</button>
                <div id="pagesResults">
                    <a href="Data_And_Visuals.xhtml"> Data and Visuals </a>
                    <a href="Summary.xhtml"> Summary </a>
                    <a href="Conclusions.xhtml"> Conclusions </a>
                    <a href="The_Future.xhtml"> The Future </a>
                </div>
            </div>
            <!-- End button -->
        </div>
        <div id="second">
            <h2>But, how?</h2>
            <img src="Confused.jpg" alt="KevinHart1" style="width: 500px; height: 300px"
                class="center" />
            <p>For this research project, we collected 360 memes from the <a href="knowyourmeme.com"
                    >KnowYourMeme website.</a> These 360 memes come from 12 meme templates that we
                chose, with each meme template having 30 examples. In order to avoid bias in our
                research, we decided that it would be best practice to choose the first 30 that come
                up after searching the name of the meme on the <em>KnowYourMeme</em> site, while
                keeping class-appropriateness in mind. Once these were chosen, we compiled our
                courpus on to our GitHub repository.</p>
            <p>From there, we created and agreed upon a schema that would keep us tagging our memes
                in a consistent way. With this schema in mind, and evenetually associated to all of
                our XML documents, we transcribed and marked up all 360 of our memes.</p>
            <p>Each of these memes were tagged so that you could see each phrase in their simplest
                forms. For example, we tagged almost every individual word, and sometimes couple of
                words, to show noun phrases, verb phrases, and prepositional phrases. These phrases
                were also given attributes to show whether or not they met the criteria of being or
                having a subject or an object. When no subject was present in the sentence fragment,
                a null subject empty element was created in order to continue to track where our
                subjects were/weren't.</p>
        </div>
    </body>
</html>
